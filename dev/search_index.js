var documenterSearchIndex = {"docs":
[{"location":"Details.html#SSHBinner","page":"SSHBinner","title":"SSHBinner","text":"","category":"section"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"As mentioned before a SSHBinner can be created using SSHBinner(N_bins), where N_bins is the requested number of bins. Typically the binner will have slightly more or less bins as it optimizes the shape and size of each bin.","category":"page"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"SSHBinner(::Real)","category":"page"},{"location":"Details.html#SphereSurfaceHistogram.SSHBinner-Tuple{Real}","page":"SSHBinner","title":"SphereSurfaceHistogram.SSHBinner","text":"SSHBinner(N_bins::Integer)\n\nGenerate a Sphere Surface Histogram Binner with approximately N_bins.\n\n\n\n\n\n","category":"method"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"Beyond this a binner can also be created from the bins of another binner. This is useful for saving and loading it. Instead of saving the whole structure, you may save just binner.bins and recover the full object using SSHBinner(bins).","category":"page"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"SSHBinner(::Vector)","category":"page"},{"location":"Details.html#SphereSurfaceHistogram.SSHBinner-Tuple{Array{T,1} where T}","page":"SSHBinner","title":"SphereSurfaceHistogram.SSHBinner","text":"SSHBinner(bins)\n\nGenerate a Sphere Surface Histogram Binner using the bins of another SSHBinner. This effectively creates a copy of the other source SSHBinner.\n\n\n\n\n\n","category":"method"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"You can also pick between two algorithms for generating bins. This can be done by using the method keyword argument in SSHBinner to pass either","category":"page"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"partition_sphere1\npartition_sphere2","category":"page"},{"location":"Details.html#SphereSurfaceHistogram.partition_sphere1","page":"SSHBinner","title":"SphereSurfaceHistogram.partition_sphere1","text":"partition_sphere1(dA)\n\nPartitions a sphere into bins of size dA where number of divisions in ϕ (0..2π) is not restricted, i.e. it can be any integer.\n\nNote that for a random dA this will not produce equally sized bins. (Specifically bins at z ≈ 0 will be wrong.) The algorithm relies on partition_sphere_optim to optimize dA to a value fitting on the sphere surface which happens during the creation of an SSHBinner.\n\n\n\n\n\n","category":"function"},{"location":"Details.html#SphereSurfaceHistogram.partition_sphere2","page":"SSHBinner","title":"SphereSurfaceHistogram.partition_sphere2","text":"partition_sphere2(dA)\n\nPartitions a sphere into bins of size dA where number of divisions in ϕ (0..2π) is restricted to a power of 2.\n\nNote that for a random dA this will not produce equally sized bins. (Specifically bins at z ≈ 0 will be wrong.) The algorithm relies on partition_sphere_optim to optimize dA to a value fitting on the sphere surface which happens during the creation of an SSHBinner.\n\n\n\n\n\n","category":"function"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"Note that both methods are optimized by another function, so that the area of each bin is equal.","category":"page"},{"location":"Details.html#SSHAverager","page":"SSHBinner","title":"SSHAverager","text":"","category":"section"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"The SSHAverager follows the same interface and provides the same methods:","category":"page"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"SSHAverager(::Real)","category":"page"},{"location":"Details.html#SphereSurfaceHistogram.SSHAverager-Tuple{Real}","page":"SSHBinner","title":"SphereSurfaceHistogram.SSHAverager","text":"SSHAverager(N_bins::Integer)\n\nGenerate a Sphere Surface Histogram Averager with approximately N_bins.\n\n\n\n\n\n","category":"method"},{"location":"Details.html","page":"SSHBinner","title":"SSHBinner","text":"SSHAverager(::Vector{Float64}, ::Vector{Int64})","category":"page"},{"location":"Details.html#SphereSurfaceHistogram.SSHAverager-Tuple{Array{Float64,1},Array{Int64,1}}","page":"SSHBinner","title":"SphereSurfaceHistogram.SSHAverager","text":"SSHAverager(sums, counts)\n\nGenerate a Sphere Surface Histogram Averager using the bins of another SSHAverager. This effectively creates a copy of the other source SSHAverager.\n\n\n\n\n\n","category":"method"},{"location":"Plotting.html#Plotting-with-Makie","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"section"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"SphereSurfaceHistogram makes use of Requires.jl to dynamically load plotting and mesh generation functionality when Makie is present. Using Makie recipes, the following plotting methods will be exposed:","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"scatter(binner)\nscatter!(binner)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This method scatters points that match the position of each bin. It can take all the typical Makie.scatter/Makie.scatter! arguments.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"(Image: Example Plot)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"mesh(binner)\nmesh!(binner)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This method creates a mesh where each vertex corresponds to a bin of the given binner::SphereSurfaceHistogram. One can easily color this mesh according to the bin counts by mapping binner.bins to colors. For example:","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"bin_max = maximum(binner.bins)\nmesh(binner, color=map(b -> RGB(b/bin_max, 0.0, 0.0), binner.bins))","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"(Image: Example Plot)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"linesegments(binner)\nlinesegments!(binner)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This method plots the boundaries of each bin. To avoid clipping/z-fighting, these lines are plotted at a slightly larger radius (1.001).","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"(Image: Example Plot)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"histogram(binner)\nhistogram!(binner)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This method is the main plotting function. It constructs a mesh just like mesh and maps each bin to a color from a colormap. The keyword arguments include:","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"outline = false: When true each bin is outlined. The outlines are equivalent to the ones created by linesegments.\nlinecolor = :black: The color used for the outline.\ncolormap = :matter: The colormap used to color mesh.\ncolorscale = :absolute: This defines the scale used when mapping bins to colors.\n:absolute sets colorrange = [0, maximum(binner.bins)]\n:relative sets colorrange = [minimum(binner.bins), maximum(binner.bins)]\n:static keeps the colorrange untouched, i.e. it allows you to pick it\ncolorrange: defines the bin values representing the first and last color of the colormap.\ntransparency = false: Much like standard Makie this enables transparency. Set this to true if your colormap is transparent.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"(Image: Example Plot)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"All examples use binner = SSHBinner(500) with one million random vectors normalize(2rand(3) .- 1.0).","category":"page"},{"location":"Plotting.html#Plotting-without-Makie","page":"Plotting with Makie","title":"Plotting without Makie","text":"","category":"section"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"If Makie is not your cup of tea you can still make use of the mesh, point and line generation methods defined in SphereSurfaceHistogram. They are exposed by using GeometryBasics. The following methods are implemented:","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"to_cartesian([radius,] theta, phi)","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Returns the cartesian representation of a unit vector given by two angles in spherical coordiantes.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"face_mesh(binner[, radius, extrude=0])","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This method generates a disconnected GLNormalMesh where (connected) faces represent bin areas. By setting extrude > 0 these faces will be extruded outwards, visualizing where bins are located.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Note that this representation is not entirely correct as it does not include the curvature of bins.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"vertex_mesh(binner[, radius])","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Generates a GLNormalMesh where each point corresponds to the center of a bin. The vertices of this mesh are in the same order as the bins in binner.bins. Thus you can directly map bins to colors and attach them to the mesh.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"This function is used by Makie.mesh and histogram to generate the visualization of the histogram.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"bin_positions(binner[, radius])","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Returns an array of Point3f0 corresponding to the centers of each bin. The array is in the same order as binner.bins.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"line_segments_minimal(binner[, radius])","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Returns an array of Point3f0 which correspond to line segments. These segments mark the area of each bin, simialrly to face_mesh. This version does not interpolate any points so small binners may look more rectangular than they should.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"line_segments(binner[; radius, N_fragments])","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"Just like line_segments_minimal, this function generates an array of Points corresponding to line segments marking the area of each bin. This method however include interpolation, so that each line is curved.","category":"page"},{"location":"Plotting.html","page":"Plotting with Makie","title":"Plotting with Makie","text":"The keyword argument N_fragments controls how many points are interpolated over an arc [0, pi]. It will only interpolate when necessary.","category":"page"},{"location":"index.html#SphereSurfaceHistogram.jl","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"","category":"section"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"SphereSurfaceHistogram is a package for binning 3D unit vectors. Each bin has the same size - i.e. it covers (approximately) the same (curved) area on a unit sphere.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"There are currently two ways to bin values in the package. The first is SSHBinner which simply counts how often a bin has been pushed to. The other is SSHAverager which reports the average float value that has been pushed to a specific bin.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"","category":"page"},{"location":"index.html#Quickstart","page":"SphereSurfaceHistogram.jl","title":"Quickstart","text":"","category":"section"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"An empty binner with approximately 10_000 bins can be created with","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"using SphereSurfaceHistogram\nbinner = SSHBinner(10_000)","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"Adding vectors can be done using push! or append!","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"using SphereSurfaceHistogram\nbinner = SSHBinner(10_000)\npush!(binner, [1.0, 0.0, 0.0])\nappend!(binner, [[0.0, 1.0, 0.0], [0.0, 0.0, 1.0]])","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"warning: Warning\nSphereSurfaceHistogram does not verify that the given vector is normalized.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"SSHAverager works analogously:","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"using SphereSurfaceHistogram\nbinner = SSHAverager(10_000)\npush!(binner, [1.0, 0.0, 0.0], 1.6)\nappend!(binner, [[0.0, 1.0, 0.0], [0.0, 0.0, 1.0]], [0.3, 0.6])","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"You can also push to a binner using angles of a spherical coordinate system. This follows the physics convention as mentioned on wikipedia, i.e. with theta in (0 pi) being the angle between the z axis and the vector and phi in (0 2pi) extending counterclockwise from the x axis.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"using SphereSurfaceHistogram\nbinner = SSHBinner(10_000)\npush!(binner, 0.5pi, 1.7pi) # theta, phi","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"warning: Warning\nSphereSurfaceHistogram does not verify that the given angles are in bounds.","category":"page"},{"location":"index.html#Accessing-the-Histogram","page":"SphereSurfaceHistogram.jl","title":"Accessing the Histogram","text":"","category":"section"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"SphereSurfaceHistogram provides custom getindex methods working with angles in radians.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"getindex(::SSHBinner, ::Real, ::Real)","category":"page"},{"location":"index.html#Base.getindex-Tuple{SSHBinner,Real,Real}","page":"SphereSurfaceHistogram.jl","title":"Base.getindex","text":"getindex(B::SSHBinner, theta, phi)\n\nReturns the height of the bin which includes angles phi ∈ (0, 2pi) and theta ∈ (0, pi).\n\n\n\n\n\n","category":"method"},{"location":"index.html#Plotting","page":"SphereSurfaceHistogram.jl","title":"Plotting","text":"","category":"section"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"SphereSurfaceHistogram includes a couple of Makie recipes. Most notably is the histogram recipe. It creates a mesh where each vertex represents a bin. Colors are then picked based on the counts in each bin.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"(Image: Example Plot)","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"The image above uses the following code","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"using SphereSurfaceHistogram, GLMakie\nbinner1 = SSHBinner(10_000)\nbinner2 = SSHBinner(10_000)\nfor _ in 1:1000\n    append!(binner1, random_unit_vector(1_000))\nend\nfor _ in 1:1_000_000\n    push!(binner2, normalize(2rand(3) .- 1.0))\nend\nfig = Figure()\nhistogram(fig[1, 1], binner1)\nhistogram(fig[1, 2], binner2)\nfig","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"info: Info\nPlotting methods are not loaded by default. SphereSurfaceHistogram makes use of Requires.jl to dynamically load plotting related methods when Makie.jl becomes available.","category":"page"},{"location":"index.html","page":"SphereSurfaceHistogram.jl","title":"SphereSurfaceHistogram.jl","text":"info: Info\nMesh generation methods can also be loaded individually. If you want to use the mesh generation methods without Makie, you should import GeometryBasics.jl.","category":"page"}]
}
